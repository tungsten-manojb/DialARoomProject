# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import datetime
import django.contrib.auth.models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookedRoom',
            fields=[
                ('booked_room_id', models.AutoField(serialize=False, primary_key=True)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.AutoField(serialize=False, primary_key=True)),
                ('booking_unique_id', models.CharField(max_length=25, null=True, verbose_name=b'Booking Unique ID')),
                ('number_of_rooms', models.PositiveIntegerField(null=True, verbose_name=b'Number Of Rooms', blank=True)),
                ('number_of_person', models.PositiveIntegerField(null=True, verbose_name=b'Number Of Person', blank=True)),
                ('number_of_adults', models.PositiveIntegerField(null=True, verbose_name=b'Number Of Adults', blank=True)),
                ('number_of_kids', models.PositiveIntegerField(null=True, verbose_name=b'Number Of kids', blank=True)),
                ('promotion_code', models.CharField(max_length=20, null=True, verbose_name=b'Promotion Code', blank=True)),
                ('booking_datetime', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 779650))),
                ('booking_rate', models.FloatField(default=0.0, verbose_name=b'Booking Room Rate')),
                ('booking_estimated_checkin_date', models.DateField(null=True, verbose_name=b'Estimated Check In Date ', blank=True)),
                ('booking_estimated_checkin_time', models.TimeField(null=True, verbose_name=b'Estimated Check In Time ', blank=True)),
                ('booking_estimated_checkout_date', models.DateField(null=True, verbose_name=b'Estimated Check Out Date ', blank=True)),
                ('booking_estimated_checkout_time', models.TimeField(null=True, verbose_name=b'Estimated Check Out Time ', blank=True)),
                ('booking_actual_checkin_date', models.DateField(null=True, verbose_name=b'Actual Check In Date ', blank=True)),
                ('booking_actual_checkin_time', models.TimeField(null=True, verbose_name=b'Actual Check In Time ', blank=True)),
                ('booking_actual_checkout_date', models.DateField(null=True, verbose_name=b'Actual Check Out Date ', blank=True)),
                ('booking_actual_checkout_time', models.TimeField(null=True, verbose_name=b'Actual Check Out Time ', blank=True)),
                ('booking_estimated_no_of_day_stay', models.PositiveIntegerField(null=True, verbose_name=b'Estimated Days')),
                ('booking_actual_no_of_day_stay', models.PositiveIntegerField(null=True, verbose_name=b'Actual Days Stayed', blank=True)),
                ('booking_check_in_status', models.BooleanField(default=False, verbose_name=b'Check-In Status')),
                ('booking_check_out_status', models.BooleanField(default=False, verbose_name=b'Check-Out Status')),
                ('booking_estimated_no_of_night_stay', models.PositiveIntegerField(null=True, verbose_name=b'Estimated Nights')),
                ('booking_actual_no_of_night_stay', models.PositiveIntegerField(null=True, verbose_name=b'Actual Nights', blank=True)),
                ('booking_cancellation_on_datetime', models.DateTimeField(null=True, verbose_name=b'Booking Cancellation Date', blank=True)),
                ('booking_favourite', models.IntegerField(default=0, verbose_name=b'Favourite?', choices=[(0, b'NO'), (1, b'YES')])),
                ('booking_status', models.IntegerField(default=0, verbose_name=b'Status', choices=[(0, b'AVAILABLE'), (1, b'BOOKED'), (2, b'COMPLETED'), (3, b'CANCELLED'), (4, b'OPEN')])),
                ('booking_creation_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 780239))),
                ('booking_remark', models.CharField(max_length=150, null=True, verbose_name=b'Booking Remark')),
                ('payment_status', models.IntegerField(default=1, verbose_name=b'Status', choices=[(1, b'ACTIVE'), (0, b'IN-ACTIVE')])),
                ('payment_method', models.CharField(max_length=150, null=True, verbose_name=b'Booking Remark')),
            ],
        ),
        migrations.CreateModel(
            name='CAMPropertyRate',
            fields=[
                ('cam_property_rate_id', models.AutoField(serialize=False, primary_key=True)),
                ('agreed_rate', models.FloatField(default=0.0, verbose_name=b'Agreed Rate')),
                ('created_date', models.DateTimeField()),
                ('created_by', models.CharField(max_length=40, null=True)),
                ('occupancy_type', models.IntegerField(default=1, verbose_name=b'Occupancy Type', choices=[(0, b'Single'), (1, b'Double'), (2, b'Additional')])),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(serialize=False, primary_key=True)),
                ('city_name', models.CharField(max_length=30, null=True, verbose_name=b'Loaction')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(serialize=False, primary_key=True)),
                ('company_unique_id', models.CharField(max_length=30, null=True, verbose_name=b'Company Unique ID')),
                ('company_name', models.CharField(max_length=50, null=True, verbose_name=b'Company Name')),
                ('company_email', models.CharField(max_length=50, null=True, verbose_name=b'Company Email')),
                ('company_site', models.CharField(max_length=50, null=True, verbose_name=b'Company Website')),
                ('company_phone_no', models.CharField(max_length=50, null=True, verbose_name=b'Company Contact No.')),
                ('company_address', models.CharField(max_length=350, null=True, verbose_name=b'Company Address')),
                ('company_city', models.CharField(max_length=50, null=True, verbose_name=b'City')),
                ('company_state', models.CharField(max_length=50, null=True, verbose_name=b'State')),
                ('company_country', models.CharField(max_length=50, null=True, verbose_name=b'Country')),
                ('company_pincode', models.CharField(max_length=50, null=True, verbose_name=b'Pincode')),
                ('company_status', models.IntegerField(default=1, verbose_name=b'Company Status', choices=[(1, b'ACTIVE'), (0, b'IN-ACTIVE')])),
                ('company_creation_date', models.DateTimeField()),
                ('company_update_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 765364))),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(serialize=False, primary_key=True)),
                ('country_name', models.CharField(max_length=30, null=True, verbose_name=b'Country')),
            ],
        ),
        migrations.CreateModel(
            name='Cuisines',
            fields=[
                ('cuisines_id', models.AutoField(serialize=False, primary_key=True)),
                ('cuisines_type', models.CharField(max_length=30, null=True, verbose_name=b'Cuisines Type')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('cust_unique_id', models.CharField(max_length=20, null=True)),
                ('cust_first_name', models.CharField(max_length=50, null=True, verbose_name=b'First Name ')),
                ('cust_last_name', models.CharField(max_length=50, null=True, verbose_name=b'Last Name ')),
                ('cust_email', models.CharField(max_length=50, null=True, verbose_name=b'Email Id ')),
                ('cust_contact_no', models.CharField(max_length=50, null=True, verbose_name=b'Contact Number ')),
                ('cust_address_line', models.CharField(max_length=150, null=True, verbose_name=b'Address Line ')),
                ('cust_city', models.CharField(max_length=50, null=True, verbose_name=b'City ')),
                ('cust_gender', models.CharField(max_length=20, null=True, verbose_name=b'Gender', choices=[(b'M', b'MALE'), (b'F', b'FEMALE')])),
                ('cust_age', models.PositiveIntegerField(null=True, verbose_name=b'Age')),
                ('cust_pincode', models.PositiveIntegerField(null=True, verbose_name=b'Pincode')),
                ('cust_image', models.ImageField(max_length=255, upload_to=b'media/cam', null=True, verbose_name=b'Upload Image', blank=True)),
                ('email_alert_on', models.IntegerField(default=0, verbose_name=b'Email Alert', choices=[(0, b'NO'), (1, b'YES')])),
                ('sms_alert_on', models.IntegerField(default=0, verbose_name=b'SMS Alert', choices=[(0, b'NO'), (1, b'YES')])),
                ('cust_status', models.IntegerField(default=1, verbose_name=b'Status', choices=[(1, b'ACTIVE'), (0, b'IN-ACTIVE')])),
                ('cust_creation_date', models.DateTimeField()),
                ('user_type', models.IntegerField(null=True, choices=[(0, b'ADMIN'), (1, b'CORPORATE'), (2, b'OWNER'), (3, b'RETAIL')])),
                ('updated_by', models.CharField(max_length=30)),
                ('cust_updated_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 768470))),
                ('sign_up_source', models.CharField(max_length=15, null=True)),
                ('sign_up_device', models.CharField(max_length=20, null=True)),
                ('cust_company_id', models.ForeignKey(related_name='customerCompany', verbose_name=b'Company Name', to='CorpRoomApp.Company', null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Facilities',
            fields=[
                ('facility_id', models.AutoField(serialize=False, primary_key=True)),
                ('facility_name', models.CharField(max_length=30, null=True, verbose_name=b'Facility')),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('guest_id', models.AutoField(serialize=False, primary_key=True)),
                ('guest_unique_id', models.CharField(max_length=30, null=True, verbose_name=b'Guest Unique Id')),
                ('guest_first_name', models.CharField(max_length=50, null=True, verbose_name=b'First Name ')),
                ('guest_last_name', models.CharField(max_length=50, null=True, verbose_name=b'Last Name ')),
                ('guest_email', models.CharField(max_length=50, null=True, verbose_name=b'Guest Email Id ')),
                ('guest_contactno', models.CharField(max_length=15, null=True, verbose_name=b'Contact Number ')),
                ('guest_status', models.IntegerField(null=True, verbose_name=b'Status', choices=[(1, b'ACTIVE'), (0, b'IN-ACTIVE')])),
                ('guest_creation_date', models.DateTimeField()),
                ('guest_update_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 776614))),
                ('customer_id', models.ForeignKey(related_name='customer_guest_id', verbose_name=b'Customer Name', to='CorpRoomApp.Customer', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.AutoField(serialize=False, primary_key=True)),
                ('invoice_unique_id', models.CharField(max_length=30, null=True, verbose_name=b'Invoice Unique ID')),
                ('invoice_datetime', models.DateField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 783621))),
                ('room_charges', models.FloatField(default=0.0, verbose_name=b'Room Charges')),
                ('extra_charges', models.FloatField(default=0.0, verbose_name=b'Extra Charges')),
                ('invoice_total_amount', models.FloatField(default=0.0, verbose_name=b'Invoice Total Amount')),
                ('discount', models.FloatField(default=0.0, verbose_name=b'Discount Amount')),
                ('tax_amount', models.FloatField(default=0.0, verbose_name=b'Tax Amount')),
                ('invoice_gross_amount', models.FloatField(default=0.0, verbose_name=b'Invoice Gross Amount')),
                ('invoice_status', models.CharField(default=b'U', max_length=3, verbose_name=b'Status', choices=[(b'P', b'PAID'), (b'U', b'UNPAID')])),
                ('invoice_paid_date', models.DateTimeField(null=True, verbose_name=b'Paid Date', blank=True)),
                ('invoice_generated_datetime', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 783758), verbose_name=b'Invoice Generated DateTime')),
                ('booking_id', models.ForeignKey(related_name='InvoiceBooking', verbose_name=b'CAM Booking Details', to='CorpRoomApp.Booking', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(serialize=False, primary_key=True)),
                ('location_name', models.CharField(max_length=30, null=True, verbose_name=b'Location')),
                ('city_id', models.ForeignKey(related_name='city', verbose_name=b'City Name', to='CorpRoomApp.City', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('payment_transaction_id', models.AutoField(serialize=False, primary_key=True)),
                ('mmp_txn', models.CharField(max_length=40, null=True, verbose_name=b'mmp_txn', blank=True)),
                ('ipg_txn_id', models.CharField(max_length=40, null=True, verbose_name=b'ipg_txn_id', blank=True)),
                ('transaction_type', models.CharField(max_length=40, null=True, verbose_name=b'transaction_type', blank=True)),
                ('property_booking_id', models.CharField(max_length=40, null=True, verbose_name=b'property_booking_id', blank=True)),
                ('discriminator', models.CharField(max_length=40, null=True, verbose_name=b'discriminator', blank=True)),
                ('srcharge', models.FloatField(null=True, verbose_name=b'srcharge', blank=True)),
                ('customer_name', models.CharField(max_length=40, null=True, verbose_name=b'udf1', blank=True)),
                ('mer_txn', models.CharField(max_length=40, null=True, verbose_name=b'mer_txn', blank=True)),
                ('card_number', models.CharField(max_length=40, null=True, verbose_name=b'CardNmber', blank=True)),
                ('ath_code', models.CharField(max_length=40, null=True, verbose_name=b'ath_code', blank=True)),
                ('bank_name', models.CharField(max_length=40, null=True, verbose_name=b'bank_name', blank=True)),
                ('date', models.CharField(max_length=40, null=True, verbose_name=b'Payment Date', blank=True)),
                ('merchant_id', models.CharField(max_length=40, null=True, verbose_name=b'merchant_id', blank=True)),
                ('amount', models.FloatField(null=True, verbose_name=b'PaymentAmount', blank=True)),
                ('prod', models.CharField(max_length=40, null=True, verbose_name=b'ipg_txn_id', blank=True)),
                ('error_description', models.CharField(max_length=40, null=True, verbose_name=b'description', blank=True)),
                ('bank_txn', models.CharField(max_length=40, null=True, verbose_name=b'bank_txn', blank=True)),
                ('f_code', models.CharField(max_length=40, null=True, verbose_name=b'f_code', blank=True)),
                ('clientcode', models.CharField(max_length=40, null=True, verbose_name=b'clientcode', blank=True)),
                ('mobile_no', models.CharField(max_length=40, null=True, verbose_name=b'udf3', blank=True)),
                ('email_id', models.CharField(max_length=40, null=True, verbose_name=b'udf2', blank=True)),
                ('udf5', models.CharField(max_length=40, null=True, verbose_name=b'Account No', blank=True)),
                ('billing_address', models.CharField(max_length=40, null=True, verbose_name=b'udf4', blank=True)),
                ('udf6', models.CharField(max_length=40, null=True, verbose_name=b'Account No', blank=True)),
                ('udf9', models.CharField(max_length=40, null=True, verbose_name=b'Account No', blank=True)),
                ('booking_transaction_create_by', models.CharField(max_length=20, null=True, verbose_name=b'Create By', blank=True)),
                ('booking_transaction_update_by', models.CharField(max_length=20, null=True, verbose_name=b'Update By', blank=True)),
                ('booking_transaction_update_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 778364), verbose_name=b'Update Date')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion_code',
            fields=[
                ('promotion_code_id', models.AutoField(serialize=False, primary_key=True)),
                ('promotion_code', models.CharField(max_length=40, null=True)),
                ('promo_code_amount', models.FloatField(default=0.0, verbose_name=b'Promo Code Amount')),
                ('promo_start_date', models.DateTimeField()),
                ('promo_end_date', models.DateTimeField()),
                ('created_date', models.DateTimeField()),
                ('promocode_usage_limit', models.FloatField(default=0.0, verbose_name=b'Promo Code Usage Limit')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.AutoField(serialize=False, primary_key=True)),
                ('property_unique_id', models.CharField(max_length=30, null=True, verbose_name=b'Property Unique_id')),
                ('property_actual_name', models.CharField(max_length=30, null=True, verbose_name=b'Property Actual Name')),
                ('property_display_name', models.CharField(max_length=30, null=True, verbose_name=b'Property Display Name')),
                ('property_description', models.CharField(max_length=4000, null=True, verbose_name=b'Property Description')),
                ('number_of_rooms', models.PositiveIntegerField(null=True, verbose_name=b'Number Of Rooms ')),
                ('property_address', models.CharField(max_length=200, null=True, verbose_name=b'Address Line')),
                ('location', models.CharField(max_length=200, null=True, verbose_name=b'Location')),
                ('property_pincode', models.CharField(max_length=10, null=True, verbose_name=b'Pincode')),
                ('property_status', models.IntegerField(default=0, null=True, verbose_name=b'Status', choices=[(0, b'AVAILABLE'), (1, b'BOOKED'), (2, b'COMPLETED'), (3, b'CANCELLED'), (4, b'OPEN')])),
                ('property_creation_date', models.DateTimeField()),
                ('property_update_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 769776))),
                ('property_availability_status', models.CharField(max_length=20, verbose_name=b'Property Availability', choices=[(True, b'AVAILABLE'), (False, b'NOT AVAILABLE')])),
                ('distance_from_railway_station', models.FloatField(default=0.0, verbose_name=b'Distance From Railway Station')),
                ('distance_from_airport', models.FloatField(default=0.0, verbose_name=b'Distance From Airport')),
                ('nearest_railway_station', models.CharField(max_length=30, null=True, verbose_name=b'Nearest Railway Station')),
                ('nearest_bus_stop', models.CharField(max_length=30, null=True, verbose_name=b'Nearest Bus Stop')),
                ('property_images', models.CharField(max_length=250, null=True)),
                ('property_documents', models.CharField(max_length=250, null=True)),
                ('property_facility', models.CharField(max_length=250, null=True)),
                ('property_type', models.IntegerField(default=0, max_length=20, null=True, verbose_name=b'Property Type', choices=[(0, b'Service Apartment'), (1, b'HOTEL')])),
                ('contact_person', models.CharField(max_length=30, null=True, verbose_name=b'Contact Person')),
                ('contact_person_email_id', models.CharField(max_length=30, null=True, verbose_name=b'Contact Person Email')),
                ('contact_person_phone_no', models.CharField(max_length=30, null=True, verbose_name=b'Contact Person Phone')),
                ('existing_occupacy', models.CharField(max_length=30, null=True, verbose_name=b'Existing Occupancy Status')),
                ('remark', models.CharField(max_length=30, null=True, verbose_name=b'Remark')),
                ('star_category', models.IntegerField(default=0, null=True, verbose_name=b'Star Category')),
                ('latitude', models.FloatField(default=0.0, verbose_name=b'Latitude')),
                ('longitude', models.FloatField(default=0.0, verbose_name=b'Longitude')),
                ('no_of_person_allowed_per_room', models.IntegerField(default=0, null=True, verbose_name=b'No Of Person Per Room')),
                ('property_owner_id', models.ForeignKey(related_name='ProperyOwnerID', verbose_name=b'Owner Name', to='CorpRoomApp.Customer', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyDocument',
            fields=[
                ('document_id', models.AutoField(serialize=False, primary_key=True)),
                ('document_name', models.CharField(max_length=30, null=True, verbose_name=b'Document Name')),
                ('document_description', models.CharField(max_length=30, null=True, verbose_name=b'Document Description')),
                ('document_file', models.FileField(max_length=255, upload_to=b'media/documents', null=True, verbose_name=b'Upload File', blank=True)),
                ('property_id', models.ForeignKey(related_name='PropertDocuments', verbose_name=b'Property Name', to='CorpRoomApp.Property', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('image_id', models.AutoField(serialize=False, primary_key=True)),
                ('image_name', models.ImageField(max_length=255, upload_to=b'media/rooms', null=True, verbose_name=b'Upload Image', blank=True)),
                ('property_id', models.ForeignKey(related_name='PropertyImages', verbose_name=b'Property Name', to='CorpRoomApp.Property', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyOwnerBankDetails',
            fields=[
                ('property_owner_bank_detail_id', models.AutoField(serialize=False, primary_key=True)),
                ('prefered_payment_method', models.CharField(max_length=40, null=True, verbose_name=b'Payment Method')),
                ('bank_name', models.CharField(max_length=50, null=True, verbose_name=b'Bank Name')),
                ('bank_branch', models.CharField(max_length=50, null=True, verbose_name=b'Bank Branch')),
                ('account_type', models.CharField(max_length=50, null=True, verbose_name=b'Account Type')),
                ('account_number', models.CharField(max_length=100, null=True, verbose_name=b'Account Number')),
                ('account_name', models.CharField(max_length=50, null=True, verbose_name=b'Account Name')),
                ('account_address', models.CharField(max_length=100, null=True, verbose_name=b'Account Address')),
                ('email_id', models.CharField(max_length=100, null=True, verbose_name=b'Email ID')),
                ('others', models.CharField(max_length=100, null=True, verbose_name=b'Others')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyRate',
            fields=[
                ('rate_id', models.AutoField(serialize=False, primary_key=True)),
                ('property_agreed_rate', models.FloatField(default=0.0, verbose_name=b'Property Agreed Rate')),
                ('property_display_rate', models.FloatField(default=0.0, verbose_name=b'Property Display Rate')),
                ('property_discount_rate', models.FloatField(default=0.0, verbose_name=b'Property Discount Rate')),
                ('single_occupancy_agreed_rate', models.FloatField(default=0.0, verbose_name=b'Single Occupancy Agreed Rate')),
                ('single_occupancy_display_rate', models.FloatField(default=0.0, verbose_name=b'Single Occupancy Display Rate')),
                ('double_occupancy_agreed_rate', models.FloatField(default=0.0, verbose_name=b'Double Occupancy Agreed Rate')),
                ('double_occupancy_display_rate', models.FloatField(default=0.0, verbose_name=b'Double Occupancy Display Rate')),
                ('additional_occupancy_agreed_rate', models.FloatField(default=0.0, verbose_name=b'Additional Occupancy Agreed Rate')),
                ('additional_occupancy_display_rate', models.FloatField(default=0.0, verbose_name=b'Additional Occupancy Display Rate')),
                ('property_id', models.ForeignKey(related_name='property_rates', verbose_name=b'Property Name', to='CorpRoomApp.Property', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyRoom',
            fields=[
                ('room_id', models.AutoField(serialize=False, primary_key=True)),
                ('room_number', models.IntegerField(null=True, verbose_name=b'Room Number ')),
                ('no_of_occupant_allowed', models.IntegerField(default=0, verbose_name=b'Status', choices=[(0, b'AVAILABLE'), (1, b'BOOKED'), (2, b'COMPLETED'), (3, b'CANCELLED'), (4, b'OPEN')])),
                ('room_type', models.CharField(default=0, max_length=12, verbose_name=b'Room Type', choices=[(b'Single Bed', b'Single Bed'), (b'Double Bed', b'Double Bed')])),
                ('room_status', models.IntegerField(default=0, verbose_name=b'Status', choices=[(0, b'AVAILABLE'), (1, b'BOOKED'), (2, b'COMPLETED'), (3, b'CANCELLED'), (4, b'OPEN')])),
                ('room_creation_date', models.DateTimeField()),
                ('room_active_status', models.IntegerField(default=1, verbose_name=b'Room Active Status', choices=[(1, b'ACTIVE'), (0, b'IN-ACTIVE')])),
                ('room_update_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 771203))),
                ('property_id', models.ForeignKey(related_name='property_rooms', verbose_name=b'Property Name', to='CorpRoomApp.Property', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShipManager',
            fields=[
                ('relationship_manager_id', models.AutoField(serialize=False, primary_key=True)),
                ('rm_unique_id', models.CharField(max_length=50, null=True, verbose_name=b'Payment Method')),
                ('rm_first_name', models.CharField(max_length=40, null=True, verbose_name=b'Payment Method')),
                ('rm_last_name', models.CharField(max_length=40, null=True, verbose_name=b'Payment Method')),
                ('rm_email', models.CharField(max_length=40, null=True, verbose_name=b'Payment Method')),
                ('rm_contactno', models.CharField(max_length=40, null=True, verbose_name=b'Payment Method')),
                ('rm_status', models.CharField(max_length=40, null=True, verbose_name=b'Payment Method')),
                ('rm_creation_date', models.DateTimeField()),
                ('rm_update_date', models.DateTimeField(default=datetime.datetime(2015, 9, 18, 9, 25, 7, 767661))),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('state_id', models.AutoField(serialize=False, primary_key=True)),
                ('state_name', models.CharField(max_length=30, null=True, verbose_name=b'State')),
                ('country_id', models.ForeignKey(related_name='country', verbose_name=b'Country Name', to='CorpRoomApp.Country', null=True)),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='relationship_manager_id',
            field=models.ForeignKey(related_name='relationManager', verbose_name=b'RelationShipManager', to='CorpRoomApp.RelationShipManager', null=True),
        ),
        migrations.AddField(
            model_name='city',
            name='state_id',
            field=models.ForeignKey(related_name='state', verbose_name=b'State Name', to='CorpRoomApp.State', null=True),
        ),
        migrations.AddField(
            model_name='campropertyrate',
            name='cust_id',
            field=models.ForeignKey(related_name='customer_rate_id', to='CorpRoomApp.Customer', null=True),
        ),
        migrations.AddField(
            model_name='campropertyrate',
            name='property_id',
            field=models.ForeignKey(related_name='cam_property_id', to='CorpRoomApp.Property', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='customer_id',
            field=models.ForeignKey(related_name='CustomerBookings', verbose_name=b'CAM Name', to='CorpRoomApp.Customer', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='guest_id',
            field=models.ForeignKey(related_name='GuestBooking', verbose_name=b'Guests', to='CorpRoomApp.Guest', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='payment_transaction_id',
            field=models.ForeignKey(related_name='BookingPayment', verbose_name=b'PaymentTransaction', to='CorpRoomApp.PaymentTransaction', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='property_id',
            field=models.ForeignKey(related_name='PropertyBookings', verbose_name=b'Apartment Name', to='CorpRoomApp.Property', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='property_room_id',
            field=models.ForeignKey(related_name='RoomBooking', verbose_name=b'Room Number', to='CorpRoomApp.PropertyRoom', null=True),
        ),
        migrations.AddField(
            model_name='bookedroom',
            name='booking_id',
            field=models.ForeignKey(related_name='booked_room_id', to='CorpRoomApp.Booking', null=True),
        ),
        migrations.AddField(
            model_name='bookedroom',
            name='room_id',
            field=models.ForeignKey(related_name='property_room_id', to='CorpRoomApp.PropertyRoom', null=True),
        ),
    ]
